rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Admins collection - managed only from the Firebase Console or server-side
    match /admins/{adminId} {
      // deny client reads/writes so admins docs can only be created/edited via Console or server admin SDK
      allow read, write: if false;
    }

    // Newsletter collection
    match /newsletter/{docId} {
      // Allow anyone (including unauthenticated users) to create a newsletter signup.
      // This keeps the public signup form working without server-side code.
      allow create: if true;

      // Only authenticated users who have an 'admins' document (doc id == their uid) can read/update/delete
      allow read, update, delete: if request.auth != null
        && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Existing collections (posts, authors, categories, contacts)
    // Analytics-safe rule: allow public to increment 'views' field only
    match /posts/{postId} {
      allow read: if true;
      // Allow public to increment 'views' field only (analytics-safe)
      allow update: if request.resource.data.keys().hasOnly(['views']) &&
        request.resource.data.views is int &&
        request.resource.data.views > resource.data.views;
      // Only allow other writes (create/update/delete) if the user is authenticated and has an admins/{uid} doc
      allow write: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Hindi posts collection (same rules as posts)
    match /posts_hindi/{postId} {
      allow read: if true;
      allow update: if request.resource.data.keys().hasOnly(['views']) &&
        request.resource.data.views is int &&
        request.resource.data.views > resource.data.views;
      allow write: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    match /authors/{document=**} {
      allow read: if true;
      allow write: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    match /categories/{document=**} {
      allow read: if true;
      allow write: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Contacts collection
    match /contacts/{docId} {
      // Allow anyone to create a contact message
      allow create: if true;
      // Only authenticated admins can read/update/delete
      allow read, update, delete: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Comments collection
    match /comments/{docId} {
      // Allow anyone to read and create a comment
      allow read, create: if true;
      // Only authenticated admins can update/delete
      allow update, delete: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Fallback: default to public reads and deny writes for any other documents
    match /{document=**} {
      allow read: if true;
      allow write: if false;
    }
  }
}
